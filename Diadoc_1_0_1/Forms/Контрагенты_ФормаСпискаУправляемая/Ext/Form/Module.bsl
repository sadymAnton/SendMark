&НаСервере
Перем мОбработкаОбъект;
&НаКлиенте
Перем ОсновнаяФорма;

//{		Сервисные методы
	

// Заглушка для совместимости с управляемыми формами	
&НаСервере
Функция ОбработкаОбъект()
	
	Если мОбработкаОбъект=Неопределено Тогда
		
		Если Не ЭтоУправляемаяФорма() Тогда
			мОбработкаОбъект = Вычислить("ОбработкаОбъект");
		Иначе
			мОбработкаОбъект = Вычислить("РеквизитФормыВЗначение(""Объект"")");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат мОбработкаОбъект;
	
КонецФункции
	
&НаКлиенте
Функция ОсновнаяФорма() Экспорт

	Если ОсновнаяФорма = Неопределено Тогда
		ОсновнаяФорма= ВладелецФормы.ОсновнаяФорма();
	КонецЕсли;	
	
	Возврат ОсновнаяФорма;
	
КонецФункции

&НаСервере
Функция ЭтоУправляемаяФорма()
	
	Возврат (СтрДлина(ТипЗнч(ЭтаФорма))>5);
	
КонецФункции

//}		Сервисные методы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновитьСписокНаСервере();
	
	УстановитьНачальныеНастройкиОтбора();
	УправлениеВидимостью();
		
	//Если Не РежимВыбораСписка Тогда
	//	
	//	КнопкиСписка = ЭлементыФормы.КоманднаяПанельОрганизаций.Кнопки;
	//	Если НЕ КнопкиСписка.Найти("Выбрать")=Неопределено Тогда
	//		КнопкиСписка.Удалить(КнопкиСписка.Выбрать);
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНачальныеНастройкиОтбора()
	
	Колонки= СправочникСписок.Выгрузить().Колонки;
	СхемаСКД= ОбработкаОбъект().ДиадокЮрФизЛица_ПолучитьСКД(Колонки);
	
	АдресСхемы= ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
		
	Объект.КомпоновщикНастроекОтбора_Контрагенты.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	Объект.КомпоновщикНастроекОтбора_Контрагенты.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
		
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостью()
	Элементы.КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтбор.Видимость= Ложь;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНаСервере()
	
	ТекСтрока = Элементы.СправочникСписок.ТекущаяСтрока;
	ТекущаяСсылка = Неопределено;
	Если Не ТекСтрока=Неопределено Тогда
		ТекущаяСсылка = СправочникСписок.НайтиПоИдентификатору(ТекСтрока).Ссылка;
	КонецЕсли;
	
	Список = ОбработкаОбъект().ЭДО_СправочникМенеджер_ПолучитьСписокЭлементов("Контрагенты");
	
	СправочникСписок.Очистить();
	
	Для Каждого Стр Из Список Цикл
		НоваяСтрока = СправочникСписок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
		
		НоваяСтрока.НомерСтроки= 	НоваяСтрока.ПолучитьИдентификатор();
		НоваяСтрока.Видимость= 		Истина;
	КонецЦикла;
	
	Если НЕ ТекущаяСсылка=Неопределено Тогда
		СтрокиПоОтбору = СправочникСписок.НайтиСтроки(Новый Структура("Ссылка",ТекущаяСсылка));
		Если СтрокиПоОтбору.Количество()=1 Тогда
			Элементы.СправочникСписок.ТекущаяСтрока = СтрокиПоОтбору[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьССервером(Команда)
	
	ОписаниеОповещения = ОсновнаяФорма().НовыйОписаниеОповещения("СинхронизироватьЮрФизЛицаССервером",ОсновнаяФорма().Модуль_РаботаСКомпонентой());
	ОсновнаяФорма().ВыполнитьДействиеПослеАвторизации(ОписаниеОповещения);
	
	УстановитьТекущиеОтборы();
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	ОбновитьСписокНаСервере();
	УстановитьТекущиеОтборы();
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЭлементаДляРедактированияИлиДобавления(ЭтоДобавление=Ложь)
	
	ТекСтрока = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если (ТекСтрока=Неопределено) и Не ЭтоДобавление Тогда
		Возврат;
	КонецЕсли;	
	
	СсылкаНаЭлемент = Неопределено;
	
	Если НЕ ТекСтрока=Неопределено 
		и не ЭтоДобавление Тогда
		
		СсылкаНаЭлемент = ТекСтрока.Ссылка;
		
	КонецЕсли;
	
	ПараметрыФормы=	Новый Структура;
	ПараметрыФормы.Вставить("Ссылка",							СсылкаНаЭлемент);
	ПараметрыФормы.Вставить("Новая",							ЗначениеЗаполнено(СсылкаНаЭлемент));
	ПараметрыФормы.Вставить("ИмяСправочника",					"Контрагенты");
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
	
	ОткрытьФорму(ОсновнаяФорма().Модуль_Платформа().ПутьКФормам+"Контрагенты_ФормаЭлементаУправляемая", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="Диадок_Сохранение_Контрагент" Тогда
		ОбновитьСписокНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Параметры.ФормаОткрытаКакВыбор Тогда
		Если НЕ Элементы.СправочникСписок.ТекущиеДанные=Неопределено Тогда
			ЭтаФорма.Закрыть(Элементы.СправочникСписок.ТекущиеДанные.Ссылка);
		КонецЕсли;
	Иначе
		ОткрытьФормуЭлементаДляРедактированияИлиДобавления(Ложь);
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СконвертироватьИзТиповогоМодуля(Команда)
	СконвертироватьИзТиповогоМодуляНаСервере();
КонецПроцедуры

&НаСервере
Процедура СконвертироватьИзТиповогоМодуляНаСервере()
	
	ОбработкаОбъект().ВыполнитьКонвертациюСоответствийКонтрагентов("УФ");
	ОбновитьСписокНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеКонтрагентов(Команда)
	
	РезультатТекст = ВыполнитьГрупповоеСопоставлениеКонтрагентовНаСервере();
	
	Если ЗначениеЗаполнено(РезультатТекст) Тогда
		ОчиститьСообщения();
		Сообщить(РезультатТекст, СтатусСообщения.Информация);
		ОбновитьСписокНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьГрупповоеСопоставлениеКонтрагентовНаСервере()
	
	Возврат ОбработкаОбъект().ЭДО_ВыполнитьГрупповоеСопоставлениеКонтрагентов();
	
КонецФункции

&НаКлиенте
Процедура КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтборПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ЗначениеЗаполнено(Строка(Элемент.ТекущиеДанные.ЛевоеЗначение)) И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ТипГруппы) И НЕ ОтменаРедактирования Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УстановитьТекущиеОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтборПриИзменении(Элемент)
	
	Элементы.КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтбор.ЗакончитьРедактированиеСтроки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущиеОтборы()
	
	РезультатОтбора= ПрочитатьДанныеПоОтборуНаСервере();

	Для Каждого Стр Из СправочникСписок Цикл
		Если РезультатОтбора.Найти(Стр.НомерСтроки) = Неопределено Тогда	
			Стр.Видимость= Ложь;	
		Иначе
			Стр.Видимость= Истина;	
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПрочитатьДанныеПоОтборуНаСервере()
	
	СхемаСКД= ПолучитьИзВременногоХранилища(АдресСхемы);
	
	// Получим результат СКД в таблицу значений
	КомпановщикМакета= 		Новый КомпоновщикМакетаКомпоновкиДанных;
	ИсточникДанных= 		Новый Структура("ТаблицаДанных", СправочникСписок.Выгрузить());
	Макет= 					КомпановщикМакета.Выполнить(СхемаСКД, Объект.КомпоновщикНастроекОтбора_Контрагенты.ПолучитьНастройки(),,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпановки= 	Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпановки.Инициализировать(Макет, ИсточникДанных);
	
	ТЗРезультат= 		Новый ТаблицаЗначений;
	ПроцессорВывода= 	Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпановки, Истина);
	
	// нас интересует только номера строк попавшие в отбор
	ТЗРезультат.Свернуть("НомерСтроки");
	Возврат ТЗРезультат.ВыгрузитьКолонку("НомерСтроки");
			
КонецФункции

&НаКлиенте
Процедура ПоказатьСкрытьОтбор(Команда)
	
	Если Элементы.КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтбор.Видимость Тогда
		Элементы.КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтбор.Видимость=	Ложь;
		Элементы.СправочникСписокПоказатьСкрытьОтбор.Пометка= 		Ложь;
	Иначе
		Элементы.КомпоновщикНастроекОтбора_КонтрагентыНастройкиОтбор.Видимость=	Истина;
		Элементы.СправочникСписокПоказатьСкрытьОтбор.Пометка=		Истина;
	КонецЕсли;
	
КонецПроцедуры
