&НаСервере
Перем ОбработкаОбъект;

&НаКлиенте
Перем ОсновнаяФорма;

&НаКлиенте
Функция ОсновнаяФорма() Экспорт

	Если ОсновнаяФорма = Неопределено Тогда
		ОсновнаяФорма= ВладелецФормы.ОсновнаяФорма();
	КонецЕсли;	
	
	Возврат ОсновнаяФорма;
	
КонецФункции

&НаСервере
Функция ОбработкаОбъект()
	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	Возврат ОбработкаОбъект;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если ЗначениеЗаполнено(Параметры.Ссылка) Тогда
		
		ЗаполнитьРеквизитыФормыНаСервере();
	
		Если Не ЗначениеЗаполнено(СвязанныйСправочник1) Тогда
			//типизируем поле
			ОбработкаОбъект().ЭДО_Модуль_УстановитьТипПоля1С(ЭтаФорма,"СвязанныйСправочник1","Организации");
		КонецЕсли;
	
	КонецЕсли;
	
	Если Параметры.ИмяСправочника = "ПодразделенияОрганизаций" Тогда
		
		ЭтаФорма.Заголовок = "Подразделение организации";
		
		Элементы.ГруппаПодразделение.Видимость	= Истина;
		Элементы.ГраницаСинхронизации.Видимость	= Ложь;

	ИначеЕсли Параметры.ИмяСправочника = "Организации" Тогда
		
		ЭтаФорма.Заголовок = "Организация";
		
		Элементы.ГруппаПодразделение.Видимость	= Ложь;
		Элементы.ГраницаСинхронизации.Видимость	= Истина;
		
		Если ОбработкаОбъект().ЭДО_Использовать1СЭДО() Тогда				
												
			Элементы.ВидУПД.Видимость = Ложь;
			ВидУПД = "";			
			
			Элементы.ДеревоПодразделенийСвязь1.Видимость = Ложь;
			Элементы.ДеревоПодразделенийСвязь2.Видимость = Ложь;
			Элементы.ДеревоПодразделенийСвязь3.Видимость = Ложь;
			
		Иначе
			Элементы.ИспользоватьУПД.Видимость = Ложь;
			ВидУПД = ОбработкаОбъект().ЭДО_РегистрНастроекКонтрагентов_ПрочитатьЗначениеЗаписи(Новый Структура("Организация, ИмяСвойства, Контрагент", Параметры.Ссылка, "Вид УПД", Справочники.Диадок_ЮрФизЛица.ПустаяСсылка()));
			ПолучитьСписокЭлементовВидовУПДНаСервере();
		КонецЕсли;
			
	КонецЕсли;
	
	Элементы.ТаблицаСертификатовОрганизацииОтпечатокСертификата.СписокВыбора.Добавить("ЛокальныеСертификаты", "Локальные сертификаты",, ОбработкаОбъект().ЭДО_БиблиотекаКартинок()["КартинкаЛокальныйСертификат"]);
	Элементы.ТаблицаСертификатовОрганизацииОтпечатокСертификата.СписокВыбора.Добавить("ОблачныеСертификаты", "Облачные сертификаты",, ОбработкаОбъект().ЭДО_БиблиотекаКартинок()["КартинкаОблачныйСертификат"]);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормыНаСервере()

	СтруктураРеквизитов = ОбработкаОбъект().ЭДО_СправочникМенеджер_ПолучитьЭлемент("Организации",Параметры.Ссылка);
	
	СтрокаРеквизитов = "Наименование,ID,ИНН,КПП,СвязанныйСправочник1,СвязанныйСправочник2,СвязанныйСправочник3,Аббревиатура,ID_ВладелецПодразделения,ID_РодительПодразделения,ID_ОсновноеПодразделение,AfterIndexKey,ИспользоватьУПД";
	
	Для Каждого ИмяРеквизита Из ОбработкаОбъект().ЭДО_Служебные_РазложитьСтрокуВМассивСлов(СтрокаРеквизитов) Цикл
		СтруктураРеквизитов.Свойство(ИмяРеквизита, ЭтаФорма[ИмяРеквизита]);
	КонецЦикла;
	
	
	Если Не ЗначениеЗаполнено(AfterIndexKey) Тогда
		//при первоначальной настройке границу ленты событий скинем на начало сегодняшнего дня.
		AfterIndexKey = Формат(ТекущаяДата(),"ДФ=yyyyMMdd");
	КонецЕсли;
	
	Если Параметры.ИмяСправочника = "Организации" Тогда
		
		Если НЕ ОбработкаОбъект().ЭДО_Использовать1СЭДО() Тогда
			ОбновитьДеревоПодразделенийНаСервере();		
		КонецЕсли;
		
		Если СтруктураРеквизитов.Свойство("ХранилищеСертификатовОрганизации") И СтруктураРеквизитов.ХранилищеСертификатовОрганизации <> Неопределено Тогда
			
			Для Каждого СтрокаТЗ Из СтруктураРеквизитов.ХранилищеСертификатовОрганизации Цикл
				СтрокаТЧ = ТаблицаСертификатовОрганизации.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТЗ);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоПодразделенийНаСервере(ДополнительныеПараметры=Неопределено)
	
	Если ОбработкаОбъект().ЭДО_Использовать1СЭДО() Тогда
		
		Для Индекс = 0 По ДополнительныеПараметры.МассивСсылок.ВГраница() Цикл
			
			Ссылка = ДополнительныеПараметры.МассивСсылок[Индекс];
			МассивСтруктурПодразделений = ДополнительныеПараметры.МассивДанных[Индекс];
			
			Если Ссылка = Параметры.Ссылка Тогда
								
				Если МассивСтруктурПодразделений.Количество() > 0 Тогда
					Дерево = ОбработкаОбъект().ЭДО_Преобразование_МассивСтруктурВДеревоЗначений(МассивСтруктурПодразделений,"ID_РодительПодразделения","");
				Иначе		
					Дерево = Новый ДеревоЗначений;
					Дерево.Колонки.Добавить("Наименование");
					Дерево.Колонки.Добавить("ID");
				КонецЕсли;
			Иначе	
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе		
    	Дерево = ОбработкаОбъект().ЭДО_СправочникМенеджер_ПолучитьДеревоЭлементов("ПодразделенияОрганизаций",Параметры.Ссылка);
	КонецЕсли;
	
	мДеревоПодразделений = РеквизитФормыВЗначение("ДеревоПодразделений");
	мДеревоПодразделений.Строки.Очистить();
	ОбработкаОбъект().ЗаполнитьСтрокиДерева(Дерево,мДеревоПодразделений);
	ЗначениеВРеквизитФормы(мДеревоПодразделений,"ДеревоПодразделений");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЭлементСправочника()
	
	СтруктураРеквизитов = Новый Структура;
	
	СтруктураРеквизитов.Вставить("СвязанныйСправочник1",	СвязанныйСправочник1);
	СтруктураРеквизитов.Вставить("СвязанныйСправочник2",	СвязанныйСправочник2);
	СтруктураРеквизитов.Вставить("СвязанныйСправочник3",	СвязанныйСправочник3);
	СтруктураРеквизитов.Вставить("AfterIndexKey",			AfterIndexKey);
	СтруктураРеквизитов.Вставить("ИспользоватьУПД",			ИспользоватьУПД);
	СтруктураРеквизитов.Вставить("ID_ОсновноеПодразделение",ID_ОсновноеПодразделение);
	СтруктураРеквизитов.Вставить("ТаблицаСертификатов",		РеквизитФормыВЗначение("ТаблицаСертификатовОрганизации"));
	
	ОбработкаОбъект().ЭДО_СправочникМенеджер_СохранитьЭлемент("Организации", Параметры.Ссылка, СтруктураРеквизитов);
	
	Если Параметры.ИмяСправочника = "Организации" И ЗначениеЗаполнено(ВидУПД) Тогда
		ОбработкаОбъект().ЭДО_РегистрНастроекКонтрагентов_ДобавитьЗапись(Новый Структура("Организация, ИмяСвойства, Значение", Параметры.Ссылка, "Вид УПД", ВидУПД));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьЭлементСправочника();	
	
	Если Параметры.ИмяСправочника = "ПодразделенияОрганизаций" Тогда
		Оповестить("Диадок_Сохранение_Подразделение");
	ИначеЕсли Параметры.ИмяСправочника = "Организации" Тогда
		Оповестить("Диадок_Сохранение_Организация");
	КонецЕсли;
	
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура AfterIndexKeyНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Подсказка = "Введите начальную дату для загрузки сообщений";
	ЧастьДаты = ЧастиДаты.Дата;
	ВыбраннаяДата = ТекущаяДата();
	
	Если ОсновнаяФорма().Параметры.МодальностьЗапрещена Тогда
		Оповещение = Вычислить("Новый ОписаниеОповещения(""ОбработчикПослеВводаДаты"", ЭтаФорма, Параметры)");
		Выполнить("ПоказатьВводДаты(Оповещение, ВыбраннаяДата, Подсказка, ЧастьДаты)");
	Иначе
		Если ВвестиДату(ВыбраннаяДата,Подсказка,ЧастьДаты) Тогда 			
			ОбработчикПослеВводаДаты(ВыбраннаяДата, Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПослеВводаДаты(ВыбраннаяДата=Неопределено,Парам2=Неопределено) Экспорт
	Если ЗначениеЗаполнено(ВыбраннаяДата) Тогда
		AfterIndexKey = Формат(ВыбраннаяДата,"ДФ=yyyyMMdd");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодразделенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если НЕ ОсновнаяФорма().Параметры.Использовать1СЭДО Тогда
		
		СсылкаНаЭлемент = Элементы.ДеревоПодразделений.ТекущиеДанные.Ссылка;
		
		ПараметрыФормы=	Новый Структура;
		ПараметрыФормы.Вставить("Ссылка",							СсылкаНаЭлемент);
		ПараметрыФормы.Вставить("Новая",							ЗначениеЗаполнено(СсылкаНаЭлемент));
		ПараметрыФормы.Вставить("ИмяСправочника",					"ПодразделенияОрганизаций");
		ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца",	Истина);
		
		ОткрытьФорму(ОсновнаяФорма().Модуль_Платформа().ПутьКФормам+"Организации_ФормаЭлементаУправляемая", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокЭлементовВидовУПДНаСервере()
	
	ТЗ = ОбработкаОбъект().ЭДО_СправочникМенеджер_ПолучитьСписокЭлементов("ВидыПакетов");
	
	СписокВыбора = Элементы.ВидУПД.СписокВыбора;
	СписокВыбора.Очистить();
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		СписокВыбора.Добавить(СтрокаТЗ.Ссылка, СтрокаТЗ.Наименование);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Диадок_Сохранение_Подразделение" 
		И Параметры.ИмяСправочника = "Организации" Тогда
		
		ОбновитьДеревоПодразделенийНаСервере(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвязиПодразделенияПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ОсновнаяФорма().Параметры.Использовать1СЭДО И ТекущаяСтраница.Имя = "ГруппаПодразделения" Тогда
		
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Параметры.Ссылка);
		
		ДополнительныеПараметры = Новый Структура("ИмяСобытия, ИмяСправочника, МассивСсылок", "Диадок_Сохранение_Подразделение", "Организации", МассивСсылок);
		ОписаниеОповещения = ОсновнаяФорма().НовыйОписаниеОповещения("ПолучитьМассивСтруктурПодразделений_1СЭДО", ОсновнаяФорма().Модуль_РаботаСКомпонентой(), ДополнительныеПараметры);
		ОсновнаяФорма().ВыполнитьДействиеПослеАвторизации(ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьПодразделениеПоУмолчанию(Команда)
	
	ID_ОсновноеПодразделение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПодразделениеПоУмолчанию(Команда)
	
	ТекСтрока = Элементы.ДеревоПодразделений.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		ID_ОсновноеПодразделение = ТекСтрока.ID;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораСертификата(Параметр1, Параметр2=Неопределено) Экспорт
	
	Если Параметр1 <> Неопределено Тогда
		СтрокаТЧ = Элементы.ТаблицаСертификатовОрганизации.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Параметр1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикАвторизацииПоЛогину(Параметр1, Параметр2=Неопределено) Экспорт 
	
	Если ОсновнаяФорма().Модуль_РаботаСКомпонентой().ЭДО_СерверДиадок_ПроверитьСоединение() Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Режим", "ВыборОблачногоСертификата");
		ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
		
		Попытка // свежие платформы
			Оповещение = Вычислить("Новый ОписаниеОповещения(""ОбработчикВыбораСертификата"", ЭтаФорма, Параметры)");	
			Выполнить("ОткрытьФорму(ОсновнаяФорма().Модуль_Платформа().ПутьКФормам+""АвторизацияУправляемая"", ПараметрыФормы, ЭтаФорма,,,, Оповещение)");
		Исключение  // старые платформы
			ФормаАвторизации = ПолучитьФорму(ОсновнаяФорма().Модуль_Платформа().ПутьКФормам+"АвторизацияУправляемая", ПараметрыФормы, ЭтаФорма);
			РезультатОткрытия = ФормаАвторизации.ОткрытьМодально();
			ОбработчикВыбораСертификата(РезультатОткрытия);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСертификатовОрганизацииОтпечатокСертификатаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	мПутьКФормам = ОсновнаяФорма().Модуль_Платформа().ПутьКФормам;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	
	Если ВыбранноеЗначение = "ЛокальныеСертификаты" Тогда
		ПараметрыФормы.Вставить("Режим", "ВыборСертификата");
	Иначе
		Если Не ОсновнаяФорма().Модуль_РаботаСКомпонентой().ЭДО_СерверДиадок_ПроверитьСоединение() Тогда			
			
			ПараметрыФормы.Вставить("Режим", "ПоПаролю");
			Оповещение = ОсновнаяФорма().НовыйОписаниеОповещения("ОбработчикАвторизацииПоЛогину", ЭтаФорма, Параметры);
			ОсновнаяФорма().ОткрытьФормуОбъектаМодально(мПутьКФормам + "АвторизацияУправляемая", ПараметрыФормы, Оповещение);
			Возврат;
			
		КонецЕсли;
		ПараметрыФормы.Вставить("Режим", "ВыборОблачногоСертификата");
	КонецЕсли;
	
	Если ОсновнаяФорма().Параметры.МодальностьЗапрещена Тогда
		
		Оповещение = ОсновнаяФорма().НовыйОписаниеОповещения("ОбработчикВыбораСертификата", ЭтаФорма, ПараметрыФормы);
		ОсновнаяФорма().ОткрытьФормуОбъектаМодально(мПутьКФормам + "АвторизацияУправляемая", ПараметрыФормы, Оповещение);
		
	Иначе
		
		ФормаАвторизации = ПолучитьФорму(мПутьКФормам + "АвторизацияУправляемая", ПараметрыФормы, ЭтаФорма);
		РезультатОткрытия = ФормаАвторизации.ОткрытьМодально();
		ОбработчикВыбораСертификата(РезультатОткрытия);
		
	КонецЕсли;
	
КонецПроцедуры
