&НаСервере
Перем ОбработкаОбъект;

&НаСервере
//инициализация модуля и его экспортных функций
Функция ОбработкаОбъект()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции


&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ИзменилиИспользование1СЭДО = (ВладелецФормы.Параметры.Использовать1СЭДО <> Использовать1СЭДО);
	
	ЗаписатьНастройкиНаСервере();
	ЭтаФорма.Закрыть();
	
	Если ИзменилиИспользование1СЭДО Тогда
		ВладелецФормы.Закрыть();
	КонецЕсли;
	
	Оповестить("Диадок_Сохранение_ОбщиеНастройки");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиНаСервере()
	ОбработкаОбъект().мСохранитьОбщиеНастройки(ЭтаФорма);
КонецПроцедуры


&НаКлиенте
Процедура МестонахождениеПодключаемогоМодуляПриИзменении(Элемент)
	УправлениеДоступностьюПолейНастройкиПодключаемогоМодуля();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностьюПолейНастройкиПодключаемогоМодуля()
	
	Элементы.ПодключаемыйМодульРасположение.Видимость 	= ИспользоватьПодключаемыйМодуль;
	Элементы.ПодключаемыйМодульПуть.Видимость 			= (МестонахождениеПодключаемогоМодуля = "Диск");
	Элементы.ПредупреждениеСерверныйПуть.Видимость 		= (МестонахождениеПодключаемогоМодуля = "Диск");
	Элементы.ПодключаемыйМодульСсылка.Видимость 		= (МестонахождениеПодключаемогоМодуля = "1С");
	Элементы.ПодключаемыйМодульИмяОбработки.Видимость 	= (МестонахождениеПодключаемогоМодуля = "Конфигурация");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеДоступностьюПолейНастройкиПодключаемогоМодуля();	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодключаемыйМодульПриИзменении(Элемент)
	УправлениеДоступностьюПолейНастройкиПодключаемогоМодуля();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработкаОбъект().мПрочитатьОбщиеНастройки(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СконвертироватьКонтрагентовИзТиповогоМодуля(Команда)
	
	СконвертироватьКонтрагентовИзТиповогоМодуляНаСервере();
	Оповестить("Диадок_Сохранение_Контрагент");
	
КонецПроцедуры

&НаСервере
Процедура СконвертироватьКонтрагентовИзТиповогоМодуляНаСервере()
	
	ОбработкаОбъект().ВыполнитьКонвертациюСоответствийКонтрагентов("УФ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключаемыйМодульПутьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Режим = РежимДиалогаВыбораФайла.Открытие;
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	Фильтр = "Внешняя обработка 1С:Предприятия 8 (*.epf)|*.epf";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
    ДиалогОткрытияФайла.Заголовок = "Выберите файл подключаемого модуля";
    Если ДиалогОткрытияФайла.Выбрать() Тогда
         ПодключаемыйМодульПуть = ДиалогОткрытияФайла.ПолноеИмяФайла;
    КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ГенерироватьПримерПодключаемогоМодуля(Команда)
	Текст = ГенерироватьПримерПодключаемогоМодуляНаСервере();
	Текст.Показать();
КонецПроцедуры

&НаСервере
Функция ГенерироватьПримерПодключаемогоМодуляНаСервере()
	Возврат ОбработкаОбъект().ДД_Компонента_ГенерироватьКодПодключаемогоМодуля();
КонецФункции

&НаКлиенте
Процедура РежимПроксиПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.НастройкиПрокси.Видимость = (РежимПрокси = "UseProxy");
	
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеВидовПакетовИДокументовПМ(Команда)
	
	ЭтаФорма.ВладелецФормы.ПолучитьФормуОбработки("СопоставлениеПакетовИВидовДокументовПМУправляемая").Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРегламентныеДействия(Команда)
	
	ВыполнитьРегламентныеДействияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРегламентныеДействияНаСервере()

	ОбработкаОбъект().ЭДО_ВыполнитьРегламентныеДействия();

КонецПроцедуры

