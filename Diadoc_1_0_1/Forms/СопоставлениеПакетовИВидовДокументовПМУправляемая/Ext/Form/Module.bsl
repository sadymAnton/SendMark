&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТаблицаИспользуемыхПакетов = ОбработкаОбъект().ЭДО_ПодключаемыйМодуль_ОбработатьСобытие("ПолучитьТаблицуИспользуемыхПакетов");
	
	Если ТаблицаИспользуемыхПакетов <> Неопределено Тогда
		Для Каждого СтрокаТЗ Из ТаблицаИспользуемыхПакетов Цикл		
			СтрокаТЧ = ТаблицаВидовПакетов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТЗ);
			СтрокаТЧ.Ссылка = ОбработкаОбъект().ЭДО_СправочникМенеджер_НайтиПоРеквизиту("ВидыПакетов", "ID", СтрокаТЧ.ID);
			Элементы.ТаблицаВидовПакетовСсылка.СписокВыбора.Добавить(СтрокаТЧ.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаИспользуемыхВидовДокументов = ОбработкаОбъект().ЭДО_ПодключаемыйМодуль_ОбработатьСобытие("ПолучитьТаблицуИспользуемыхВидовДокументов");
	
	Если ТаблицаИспользуемыхВидовДокументов <> Неопределено Тогда
		Для Каждого СтрокаТЗ Из ТаблицаИспользуемыхВидовДокументов Цикл
			СтрокаТЧ = ТаблицаВидовДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТЗ);
			СтрокаТЧ.Ссылка = ОбработкаОбъект().ЭДО_СправочникМенеджер_НайтиПоРеквизиту("ВидыДокументов", "ID", СтрокаТЧ.ID);
			Элементы.ТаблицаВидовПакетовСсылка.СписокВыбора.Добавить(СтрокаТЧ.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработкаОбъект()
	
	Если ОбработкаОбъект = Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат ОбработкаОбъект;
	
КонецФункции

&НаСервере
Функция ПолучитьСписокЭлементов(ИмяСправочника)
	
	ТЗ = ОбработкаОбъект().ЭДО_СправочникМенеджер_ПолучитьСписокЭлементов(ИмяСправочника);
	
	Результат = Новый СписокЗначений;
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		Результат.Добавить(СтрокаТЗ.Ссылка, СтрокаТЗ.Наименование);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаВидовПакетовСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокЭлементов = ПолучитьСписокЭлементов("ВидыПакетов");
	
	Элемент.СписокВыбора.Очистить();
	
	Для Каждого текЭлемент Из СписокЭлементов Цикл
		Элемент.СписокВыбора.Добавить(текЭлемент.Значение, текЭлемент.Представление);			
	КонецЦикла;
	
	Элемент.СписокВыбора.СортироватьПоПредставлению(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВидовДокументовСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокЭлементов = ПолучитьСписокЭлементов("ВидыДокументов");
	
	Элемент.СписокВыбора.Очистить();
	
	Для Каждого текЭлемент Из СписокЭлементов Цикл
		Элемент.СписокВыбора.Добавить(текЭлемент.Значение, текЭлемент.Представление);			
	КонецЦикла;
	
	Элемент.СписокВыбора.СортироватьПоПредставлению();	
	
КонецПроцедуры

&НаСервере
Функция ЕстьНезаполненныеДанные()
		
	Возврат (ТаблицаВидовПакетов.НайтиСтроки(Новый Структура("Ссылка", Справочники.Диадок_ДополнительныеСправочники.ПустаяСсылка())).Количество() > 0
			ИЛИ ТаблицаВидовДокументов.НайтиСтроки(Новый Структура("Ссылка", Справочники.Диадок_ДополнительныеСправочники.ПустаяСсылка())).Количество() > 0);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьСопоставление(Команда)
	
	Если ЕстьНезаполненныеДанные() Тогда
		
		ТекстВопроса = "Для видов, которые не сопоставлены вручную, будут автоматически созданы новые соответствующие элементы.
						|Продолжить автоматическое сопоставление?";
		Режим = РежимДиалогаВопрос.ДаНет;
		
		Если ВладелецФормы.Параметры.МодальностьЗапрещена Тогда
			Оповещение = Неопределено;
			Выполнить("Оповещение = Новый ОписаниеОповещения(""ОбработчикВыполнитьСопоставление"",ЭтаФорма, Параметры)");
			Выполнить("ПоказатьВопрос(Оповещение, ТекстВопроса, Режим)");
		Иначе
			Ответ = Вопрос(ТекстВопроса, Режим, 0);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ОбработчикВыполнитьСопоставление();
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		ОбработчикВыполнитьСопоставление();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыполнитьСопоставление(КодОтвета=Неопределено, ДополнительныеПараметры=Неопределено) Экспорт
	
	Если КодОтвета = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьСопоставлениеНаСервере();
	ЭтаФорма.Закрыть();
	Оповестить("Диадок_Сохранение_ПакетДокументов");
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСопоставлениеНаСервере()
	
	//1. Виды пакетов
	
	Для Каждого СтрокаТЧ Из ТаблицаВидовПакетов Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда
			текОбъект = СтрокаТЧ.Ссылка.ПолучитьОбъект();
		Иначе
			текОбъект = Справочники.Диадок_ДополнительныеСправочники.СоздатьЭлемент();
			текОбъект.ИмяСправочника = "ВидыПакетов";
			текОбъект.Наименование = СтрокаТЧ.Наименование;
		КонецЕсли;
		
		ОбработкаОбъект().ЭДО_СправочникМенеджер_УстановитьЗначениеДопРеквизита(текОбъект, "ID", 			СтрокаТЧ.ID);
		ОбработкаОбъект().ЭДО_СправочникМенеджер_УстановитьЗначениеДопРеквизита(текОбъект, "Наименование", 	СтрокаТЧ.Наименование);
		
		текОбъект.Записать();
		
	КонецЦикла;
		
	//2. Виды документов
	
	Для Каждого СтрокаТЧ Из ТаблицаВидовДокументов Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Ссылка) Тогда
			текОбъект = СтрокаТЧ.Ссылка.ПолучитьОбъект();
		Иначе
			текОбъект = Справочники.Диадок_ДополнительныеСправочники.СоздатьЭлемент();
			текОбъект.ИмяСправочника = "ВидыДокументов";
			текОбъект.Наименование = СтрокаТЧ.Наименование;
		КонецЕсли;
		
		ОбработкаОбъект().ЭДО_СправочникМенеджер_УстановитьЗначениеДопРеквизита(текОбъект, "ID", 			СтрокаТЧ.ID);
		ОбработкаОбъект().ЭДО_СправочникМенеджер_УстановитьЗначениеДопРеквизита(текОбъект, "Наименование", 	СтрокаТЧ.Наименование);
		ОбработкаОбъект().ЭДО_СправочникМенеджер_УстановитьЗначениеДопРеквизита(текОбъект, "ТипДокумента", 	СтрокаТЧ.ТипДокумента);
		
		текОбъект.Записать();
		
	КонецЦикла;
		
КонецПроцедуры


